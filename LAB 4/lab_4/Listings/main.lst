


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             myData1, DATA, READWRITE ; your
                                                             variables and arra
                                                            ys are defined here
                                                             
    2 00000000         
    3 00000000 02 03 FE 
              FF       Array1_bytes
                               DCB              2, 3, 0xFE, 0xFF ; 1. Define an
                                                             array of bytes tha
                                                            t has four elements
                                                             called Array1_byte
                                                            s and initialize it
                                                             with 2, 3, 0xFE, a
                                                            nd 0xFF.
    4 00000004 00000000 
              00000000 
              00000000 
              00000000 Array1_Signed_Words
                               DCD              0, 0, 0, 0  ; 2. Define an arra
                                                            y of words that has
                                                             four elements call
                                                            ed Array1_Signed_Wo
                                                            rds and initialize 
                                                            it with zeros.
    5 00000014 00000000 
              00000000 
              00000000 
              00000000 Array1_unsigned_Words
                               DCD              0, 0, 0, 0  ; 3. Define an arra
                                                            y of words that has
                                                             four elements call
                                                            ed Array1_unsigned_
                                                            Words and initializ
                                                            e it with zeros.
    6 00000024 00000000 
              00000000 
              00000000 
              00000000 Array1_Add_Words
                               DCD              0, 0, 0, 0  ; 4. Define an arra
                                                            y of words that has
                                                             four elements call
                                                            ed Array1_Add_Words
                                                             and initialize it 
                                                            with zeros.
    7 00000034 00000000 
              00000000 
              00000000 
              00000000 Array1_Mul_Words
                               DCD              0, 0, 0, 0  ; 5. Define an arra
                                                            y of words that has
                                                             four elements call
                                                            ed Array1_Mul_Words
                                                             and initialize it 
                                                            with zeros.
    8 00000044 00000000 
              00000000 
              00000000 
              00000000 Array1_Div_Words
                               DCD              0, 0, 0, 0  ; 6. Define an arra



ARM Macro Assembler    Page 2 


                                                            y of words that has
                                                             four elements call
                                                            ed Array1_Div_Words
                                                             and initialize it 
                                                            with zeros.
    9 00000054         
   10 00000054         
   11 00000054                 AREA             main, CODE, READONLY
   12 00000000                 EXPORT           __main      ; make __main visib
                                                            le to linker
   13 00000000                 ENTRY
   14 00000000         
   15 00000000         ; your code is written here  
   16 00000000         
   17 00000000         __main  PROC
   18 00000000         ; main function 
   19 00000000 4831            LDR              r0, =Array1_bytes ; 1. Initiali
                                                            ze r0 to Array1_byt
                                                            es
   20 00000002 4932            LDR              r1, =Array1_Signed_Words ; 1. I
                                                            nitialize r1 to Arr
                                                            ay1_Signed_Words
   21 00000004 4A32            LDR              r2, =Array1_unsigned_Words ; 1.
                                                             Initialize r2 to A
                                                            rray1_unsigned_Word
                                                            s
   22 00000006 4B33            LDR              r3, =Array1_Add_Words ; 1. Init
                                                            ialize r3 to Array1
                                                            _Add_Words
   23 00000008 4C33            LDR              r4, =Array1_Mul_Words ; 1. Init
                                                            ialize r4 to Array1
                                                            _Mul_Words
   24 0000000A 4D34            LDR              r5, =Array1_Div_Words ; 1. Init
                                                            ialize r5 to Array1
                                                            _Div_Words
   25 0000000C         
   26 0000000C         ; PART 1
   27 0000000C 7806            LDRB             r6, [r0]    ; 
   28 0000000E B2F6            UXTB             r6, r6      ; 2. Extend the byt
                                                            e pointed by R0 usi
                                                            ng unsigned extensi
                                                            on and store the re
                                                            sult in R6.
   29 00000010 7807            LDRB             r7, [r0]    ; 
   30 00000012 B27F            SXTB             r7, r7      ; 3. Extend the byt
                                                            e pointed by R0 usi
                                                            ng signed extension
                                                             and store the resu
                                                            lt in R7.
   31 00000014 6016            STR              r6, [r2]    ; 4. Store R6 in th
                                                            e word pointed by R
                                                            2.
   32 00000016 600F            STR              r7, [r1]    ; 5. Store R7 in th
                                                            e word pointed by R
                                                            1.
   33 00000018 EB06 0907       ADD              r9, r6, r7  ; 6. Add R6 and R7 
                                                            and store the resul
                                                            t in the word point
                                                            ed by R3.



ARM Macro Assembler    Page 3 


   34 0000001C F8C3 9000       STR              r9, [r3]    ; 
   35 00000020 F04F 090A       MOV              r9, #10     ; Moves in the imme
                                                            adiate value
   36 00000024 FB06 F809       MUL              r8, r6, r9  ; 7. Multiply R8 by
                                                             10 and store the r
                                                            esult in the word p
                                                            ointed by R0.
   37 00000028 F8C4 8000       STR              r8, [r4]    ;
   38 0000002C F04F 0902       MOV              r9, #2      ; Moves the immeadi
                                                            ate value of 2 into
                                                             r8
   39 00000030 FBB6 F8F9       UDIV             r8, r6, r9  ; 8. Divide R6 by 2
                                                             using unsigned div
                                                            ision and store the
                                                             result in the word
                                                             pointed by R5.
   40 00000034 F8C5 8000       STR              r8, [r5]    ; 
   41 00000038         
   42 00000038         ; PART 2
   43 00000038 7846            LDRB             r6, [r0, #1] ;
   44 0000003A B2F6            UXTB             r6, r6      ;
   45 0000003C 7847            LDRB             r7, [r0,#1] ;
   46 0000003E B27F            SXTB             r7, r7      ;
   47 00000040 F842 6F04       STR              r6, [r2, #4]! ;
   48 00000044 F841 7F04       STR              r7, [r1, #4]! ; 
   49 00000048 EB06 0907       ADD              r9, r6, r7  ;
   50 0000004C F843 9F04       STR              r9, [r3,#4]! ; 
   51 00000050 F04F 090A       MOV              r9, #10     ;
   52 00000054 FB06 F809       MUL              r8, r6, r9  ; 
   53 00000058 F844 8F04       STR              r8, [r4,#4]! ;
   54 0000005C F04F 0902       MOV              r9, #2      ; 
   55 00000060 FBB6 F8F9       UDIV             r8, r6, r9  ; 
   56 00000064 F845 8F04       STR              r8, [r5,#4]! ;
   57 00000068         
   58 00000068         ; PART 3
   59 00000068 7886            LDRB             r6, [r0, #2] ;
   60 0000006A B2F6            UXTB             r6, r6      ;
   61 0000006C 7887            LDRB             r7, [r0,#2] ; 
   62 0000006E B27F            SXTB             r7, r7      ;
   63 00000070 F842 6F04       STR              r6, [r2, #4]! ;
   64 00000074 F841 7F04       STR              r7, [r1, #4]! ; 
   65 00000078 EB06 0907       ADD              r9, r6, r7  ;
   66 0000007C F843 9F04       STR              r9, [r3,#4]! ; 
   67 00000080 F04F 090A       MOV              r9, #10     ;
   68 00000084 FB06 F809       MUL              r8, r6, r9  ; 
   69 00000088 F844 8F04       STR              r8, [r4,#4]! ;
   70 0000008C F04F 0902       MOV              r9, #2      ; 
   71 00000090 FBB6 F8F9       UDIV             r8, r6, r9  ; 
   72 00000094 F845 8F04       STR              r8, [r5,#4]! ;
   73 00000098         
   74 00000098         ; PART 4
   75 00000098 78C6            LDRB             r6, [r0, #3] ;
   76 0000009A B2F6            UXTB             r6, r6      ;
   77 0000009C 78C7            LDRB             r7, [r0,#3] ; 
   78 0000009E B27F            SXTB             r7, r7      ;
   79 000000A0 F842 6F04       STR              r6, [r2, #4]! ;
   80 000000A4 F841 7F04       STR              r7, [r1, #4]! ; 
   81 000000A8 EB06 0907       ADD              r9, r6, r7  ;
   82 000000AC F843 9F04       STR              r9, [r3,#4]! ; 



ARM Macro Assembler    Page 4 


   83 000000B0 F04F 090A       MOV              r9, #10     ;
   84 000000B4 FB06 F809       MUL              r8, r6, r9  ; 
   85 000000B8 F844 8F04       STR              r8, [r4,#4]! ;
   86 000000BC F04F 0902       MOV              r9, #2      ; 
   87 000000C0 FBB6 F8F9       UDIV             r8, r6, r9  ; 
   88 000000C4 F845 8F04       STR              r8, [r5,#4]! ;
   89 000000C8         
   90 000000C8         
   91 000000C8                 ENDP
   92 000000C8         
   93 000000C8         ; if you have more functions put them here  
   94 000000C8         
   95 000000C8                 END
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931,A1950W --cpu=Cortex-M4.fp.sp 
--depend=.\objects\main.d -o.\objects\main.o -I.\RTE\_Target_1 -I"E:\Tennesse T
ech Course Materials\ECE 3130 MicroComputer Systems\LAB Assignments\MDK softwar
e\ARM\CMSIS\5.9.0\CMSIS\Core\Include" -I"E:\Tennesse Tech Course Materials\ECE 
3130 MicroComputer Systems\LAB Assignments\MDK software\Keil\STM32L4xx_DFP\2.6.
1\Drivers\CMSIS\Device\ST\STM32L4xx\Include" -I"E:\Tennesse Tech Course Materia
ls\ECE 3130 MicroComputer Systems\LAB Assignments\MDK software\Keil\STM32L4xx_D
FP\2.6.1\Device\Include" --predefine="__EVAL SETA 1" --predefine="__UVISION_VER
SION SETA 538" --predefine="_RTE_ SETA 1" --predefine="STM32L476xx SETA 1" --pr
edefine="_RTE_ SETA 1" --list=.\listings\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Array1_Add_Words 00000024

Symbol: Array1_Add_Words
   Definitions
      At line 6 in file main.s
   Uses
      At line 22 in file main.s
Comment: Array1_Add_Words used once
Array1_Div_Words 00000044

Symbol: Array1_Div_Words
   Definitions
      At line 8 in file main.s
   Uses
      At line 24 in file main.s
Comment: Array1_Div_Words used once
Array1_Mul_Words 00000034

Symbol: Array1_Mul_Words
   Definitions
      At line 7 in file main.s
   Uses
      At line 23 in file main.s
Comment: Array1_Mul_Words used once
Array1_Signed_Words 00000004

Symbol: Array1_Signed_Words
   Definitions
      At line 4 in file main.s
   Uses
      At line 20 in file main.s
Comment: Array1_Signed_Words used once
Array1_bytes 00000000

Symbol: Array1_bytes
   Definitions
      At line 3 in file main.s
   Uses
      At line 19 in file main.s
Comment: Array1_bytes used once
Array1_unsigned_Words 00000014

Symbol: Array1_unsigned_Words
   Definitions
      At line 5 in file main.s
   Uses
      At line 21 in file main.s
Comment: Array1_unsigned_Words used once
myData1 00000000

Symbol: myData1
   Definitions
      At line 1 in file main.s
   Uses
      None
Comment: myData1 unused
7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

__main 00000000

Symbol: __main
   Definitions
      At line 17 in file main.s
   Uses
      At line 12 in file main.s
Comment: __main used once
main 00000000

Symbol: main
   Definitions
      At line 11 in file main.s
   Uses
      None
Comment: main unused
2 symbols
346 symbols in table
